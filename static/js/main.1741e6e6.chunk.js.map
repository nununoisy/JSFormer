{"version":3,"sources":["components/upload.svg","components/ImageUpload.js","components/ImageReformer.js","components/CodeGenerator.js","App.js","index.js"],"names":["ImageUpload","props","onChange","onDrop","React","useCallback","files","length","window","URL","createObjectURL","useDropzone","accept","maxFiles","getRootProps","getInputProps","isDragActive","className","src","uploadImage","drawPixels","idxi8","width0","width1","idxi32","Uint32Array","buffer","can","document","createElement","can2","ctx","getContext","ctx2","width","height","Math","ceil","imageSmoothingEnabled","mozImageSmoothingEnabled","webkitImageSmoothingEnabled","msImageSmoothingEnabled","val","imgd","createImageData","data","Object","prototype","toString","call","slice","i","len","set","putImageData","drawImage","ImageReformer","imageURL","useState","rendering","setRendering","colorDepth","setColorDepth","dithKernEnabled","setDithKernEnabled","dithKern","setDithKern","outHeight","setOutHeight","outWidth","setOutWidth","paletteImageURL","setPaletteImageURL","outputImageUrl","setOutputImageURL","canvasRef","useRef","useEffect","a","image","Image","onload","current","canvas","q","RgbQuant","colors","palette","reIndex","sample","pal","paletteCanvas","toDataURL","reduced","reduce","reducedCanvas","Jimp","read","url","reducedImage","resize","RESIZE_NEAREST_NEIGHBOR","resizedImage","getBase64Async","MIME_PNG","paletteList","imageData","scan","bitmap","x","y","idx","rawColor","includes","push","pixDataIndex","parseInt","indexOf","w","h","console","log","type","value","e","target","checked","disabled","ref","href","title","hljs","registerLanguage","C","generateHexArray","array","hexLength","cols","result","Number","padStart","replace","CodeGenerator","imageMetadata","prefix","setPrefix","code","setCode","highlight","language","highlightedCode","setHighlightedCode","codeStyle","setCodeStyle","copied","setCopied","newCode","join","copyTimeout","setTimeout","clearTimeout","onClick","navigator","clipboard","writeText","then","catch","dangerouslySetInnerHTML","__html","App","setImageURL","setImageMetadata","d","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1741e6e6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/upload.fe063de6.svg\";","import React from 'react';\r\n\r\nimport { useDropzone } from 'react-dropzone';\r\n\r\nimport uploadImage from './upload.svg';\r\n\r\nexport default function ImageUpload(props) {\r\n    const { onChange } = props;\r\n\r\n    const onDrop = React.useCallback((files) => {\r\n        if (files && files.length > 0 && onChange)\r\n            onChange(window.URL.createObjectURL(files[0]));\r\n    }, [onChange]);\r\n\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop, accept: \"image/*\", maxFiles: 1 });\r\n\r\n    return (\r\n        <div {...getRootProps()} className=\"uploadContainer\">\r\n            <input {...getInputProps()} />\r\n            <div className=\"uploadDisplayContainer\">\r\n                <img src={uploadImage} />\r\n                { isDragActive ?\r\n                    <p>Drop the image here!</p> :\r\n                    <p>Drag an image here or click to select...</p>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport Jimp from 'jimp/es';\r\nimport RgbQuant from 'rgbquant';\r\n\r\nfunction typeOf(val) {\r\n    return Object.prototype.toString.call(val).slice(8,-1);\r\n}\r\n\r\nfunction drawPixels(idxi8, width0, width1) {\r\n    var idxi32 = new Uint32Array(idxi8.buffer);\r\n\r\n    width1 = width1 || width0;\r\n\r\n    var can = document.createElement(\"canvas\"),\r\n        can2 = document.createElement(\"canvas\"),\r\n        ctx = can.getContext(\"2d\"),\r\n        ctx2 = can2.getContext(\"2d\");\r\n\r\n    can.width = width0;\r\n    can.height = Math.ceil(idxi32.length / width0);\r\n    can2.width = width1;\r\n    can2.height = Math.ceil(can.height * width1 / width0);\r\n\r\n    ctx.imageSmoothingEnabled = ctx.mozImageSmoothingEnabled = ctx.webkitImageSmoothingEnabled = ctx.msImageSmoothingEnabled = false;\r\n    ctx2.imageSmoothingEnabled = ctx2.mozImageSmoothingEnabled = ctx2.webkitImageSmoothingEnabled = ctx2.msImageSmoothingEnabled = false;\r\n\r\n    var imgd = ctx.createImageData(can.width, can.height);\r\n\r\n    if (typeOf(imgd.data) == \"CanvasPixelArray\") {\r\n        var data = imgd.data;\r\n        for (var i = 0, len = data.length; i < len; ++i)\r\n            data[i] = idxi8[i];\r\n    }\r\n    else {\r\n        var buf32 = new Uint32Array(imgd.data.buffer);\r\n        buf32.set(idxi32);\r\n    }\r\n\r\n    ctx.putImageData(imgd, 0, 0);\r\n\r\n    ctx2.drawImage(can, 0, 0, can2.width, can2.height);\r\n\r\n    return can2;\r\n}\r\n\r\nexport default function ImageReformer(props) {\r\n    const { imageURL, onChange } = props;\r\n\r\n    const [rendering, setRendering] = React.useState(false);\r\n    const [colorDepth, setColorDepth] = React.useState(8);\r\n    const [dithKernEnabled, setDithKernEnabled] = React.useState(false);\r\n    const [dithKern, setDithKern] = React.useState(\"FloydSteinberg\");\r\n    const [outHeight, setOutHeight] = React.useState(16);\r\n    const [outWidth, setOutWidth] = React.useState(16);\r\n\r\n    const [paletteImageURL, setPaletteImageURL] = React.useState(null);\r\n    const [outputImageUrl, setOutputImageURL] = React.useState(null);\r\n\r\n    const canvasRef = React.useRef(null);\r\n\r\n    React.useEffect(async () => {\r\n        setRendering(true);\r\n        const image = new Image();\r\n        image.onload = async () => {\r\n            if (canvasRef && canvasRef.current) {\r\n                const canvas = canvasRef.current;\r\n                canvas.height = image.height;\r\n                canvas.width = image.width;\r\n                const ctx = canvas.getContext('2d');\r\n\r\n                ctx.drawImage(image, 0, 0);\r\n\r\n                const q = new RgbQuant({\r\n                    colors: 2**colorDepth,\r\n                    dithKern: dithKernEnabled ? dithKern : null,\r\n                    palette: ((colorDepth == 1) ? [[0,0,0],[255,255,255]] : []),\r\n                    reIndex: true\r\n                });\r\n                q.sample(canvas);\r\n                const pal = q.palette();\r\n                const paletteCanvas = drawPixels(pal, (colorDepth == 1) ? 2 : 16, (colorDepth == 1) ? 16 : 128);\r\n                setPaletteImageURL(paletteCanvas.toDataURL());\r\n\r\n                const reduced = q.reduce(image);\r\n                const reducedCanvas = drawPixels(reduced, image.width);\r\n\r\n                const reducedImage = await Jimp.read({url: reducedCanvas.toDataURL()});\r\n                const resizedImage = await reducedImage\r\n                    .resize(outWidth, outHeight, Jimp.RESIZE_NEAREST_NEIGHBOR);\r\n\r\n                setOutputImageURL(await resizedImage.getBase64Async(Jimp.MIME_PNG));\r\n                setRendering(false);\r\n\r\n                let paletteList = [];\r\n                let imageData = [];\r\n                resizedImage.scan(0, 0, resizedImage.bitmap.width, resizedImage.bitmap.height, (x, y, idx) => {\r\n                    const red = resizedImage.bitmap.data[idx];\r\n                    const green = resizedImage.bitmap.data[idx + 1];\r\n                    const blue = resizedImage.bitmap.data[idx + 2];\r\n\r\n                    const rawColor = ((red << 16) | (green << 8) | blue) >>> 0; // force unsigned\r\n                    if (!paletteList.includes(rawColor))\r\n                        paletteList.push(rawColor);\r\n\r\n                    const pixDataIndex = (y * resizedImage.bitmap.width) + x;\r\n\r\n                    switch (parseInt(colorDepth,10)) {\r\n                        case 1:\r\n                            if ((pixDataIndex % 8) === 0) {\r\n                                imageData.push(paletteList.indexOf(rawColor) << 7)\r\n                            } else {\r\n                                imageData[imageData.length - 1] |= paletteList.indexOf(rawColor) << (7 - (pixDataIndex % 8));\r\n                            }\r\n                            break;\r\n                        case 4:\r\n                            if ((pixDataIndex % 2) === 0) {\r\n                                imageData.push(paletteList.indexOf(rawColor) << 4);\r\n                            } else {\r\n                                imageData[imageData.length - 1] |= paletteList.indexOf(rawColor);\r\n                            }\r\n                            break;\r\n                        case 8:\r\n                            imageData.push(paletteList.indexOf(rawColor));\r\n                            break;\r\n                    }\r\n\r\n                    if (x == resizedImage.bitmap.width - 1 && y == resizedImage.bitmap.height - 1 && onChange) {\r\n                        while (paletteList.length < 2**colorDepth) {\r\n                            paletteList.push(0);\r\n                        }\r\n\r\n                        onChange({\r\n                            palette: paletteList,\r\n                            imageData,\r\n                            w: outWidth,\r\n                            h: outHeight,\r\n                            colorDepth\r\n                        });\r\n                        console.log(paletteList, imageData);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        image.src = imageURL;\r\n    }, [imageURL, colorDepth, dithKern, dithKernEnabled, outHeight, outWidth]);\r\n\r\n    return (\r\n        <div className=\"reformer\">\r\n            <label>\r\n                Image output size:\r\n                <input\r\n                    type=\"number\"\r\n                    value={outWidth}\r\n                    onChange={(e) => setOutWidth(parseInt(e.target.value,10))}\r\n                    className=\"dimensionInput\"\r\n                />\r\n                x\r\n                <input\r\n                    type=\"number\"\r\n                    value={outHeight}\r\n                    onChange={(e) => setOutHeight(parseInt(e.target.value,10))}\r\n                    className=\"dimensionInput\"\r\n                />\r\n            </label>\r\n            <label>\r\n                Color depth:\r\n                <select\r\n                    value={colorDepth}\r\n                    onChange={(e) => setColorDepth(e.target.value)}\r\n                    className=\"bitdepthInput\"\r\n                >\r\n                    <option value={1}>2 colors (1bpp)</option>\r\n                    <option value={4}>16 colors (4bpp)</option>\r\n                    <option value={8}>256 colors (8bpp)</option>\r\n                </select>\r\n            </label>\r\n            <label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    checked={dithKernEnabled}\r\n                    onChange={(e) => setDithKernEnabled(e.target.checked)}\r\n                />\r\n                Use\r\n                <select\r\n                    value={dithKern}\r\n                    onChange={(e) => setDithKern(e.target.value)}\r\n                    disabled={!dithKernEnabled}\r\n                    className=\"dithKernSelect\"\r\n                >\r\n                    <option value=\"FloydSteinberg\">Floyd-Steinberg</option>\r\n                    <option value=\"FalseFloydSteinberg\">False Floyd-Steinberg</option>\r\n                    <option value=\"Stucki\">Stucki</option>\r\n                    <option value=\"Atkinson\">Atkinson</option>\r\n                    <option value=\"Jarvis\">Jarvis</option>\r\n                    <option value=\"Burkes\">Burkes</option>\r\n                    <option value=\"Sierra\">Sierra</option>\r\n                    <option value=\"TwoSierra\">2-row Sierra</option>\r\n                    <option value=\"SierraLite\">Sierra Lite</option>\r\n                </select>\r\n                dithering\r\n            </label>\r\n            <p>Input image:</p>\r\n            <div className=\"inputCanvasContainer\">\r\n                <canvas ref={canvasRef}>\r\n                    <p>\r\n                        Your browser needs to support HTML5 canvas to use this tool.\r\n                        Please upgrade or use a different browser.\r\n                    </p>\r\n                </canvas>\r\n            </div>\r\n            { rendering ? (\r\n                <p>Rendering...</p>\r\n            ) : (\r\n                <>\r\n                    <p>Palette:</p>\r\n                    <img src={paletteImageURL} className=\"paletteImage\" />\r\n                    <p>{`Reduced image (${outWidth}x${outHeight}@${colorDepth}bpp (${2**colorDepth} colors)):`}</p>\r\n                    <a\r\n                        href={outputImageUrl}\r\n                        target=\"_blank\"\r\n                        title=\"Open in new tab\"\r\n                    >\r\n                        <img src={outputImageUrl} className=\"outputImage\" />\r\n                    </a>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport hljs from 'highlight.js/lib/core';\r\nimport C from 'highlight.js/lib/languages/c';\r\n\r\nhljs.registerLanguage('c', C);\r\n\r\nconst generateHexArray = (array, hexLength, cols) => {\r\n    let result = '    ';\r\n    for (let i = 0; i < array.length; ++i) {\r\n        const value = array[i];\r\n\r\n        result += '0x' + Number(value).toString(16).padStart(hexLength, '0') + ',';\r\n        if ((i + 1) % cols === 0) {\r\n            result += '\\n    ';\r\n        }\r\n    }\r\n\r\n    return result.replace(/\\n {4}$/,'').replace(/,$/,'');\r\n}\r\n\r\nexport default function CodeGenerator(props) {\r\n    const { imageMetadata } = props;\r\n\r\n    const [prefix, setPrefix] = React.useState('tamagotchiegg');\r\n    const [code, setCode] = React.useState('// Upload an image');\r\n    const [highlightedCode, setHighlightedCode] = React.useState(\r\n        hljs.highlight('// Upload an image', { language: 'c' }).value\r\n    );\r\n    const [codeStyle, setCodeStyle] = React.useState(\"knr\");\r\n    const [copied, setCopied] = React.useState(false);\r\n\r\n    React.useEffect(async () => {\r\n        console.log(imageMetadata);\r\n        if (imageMetadata === null) {\r\n            setCode('// Upload an image');\r\n            return;\r\n        }\r\n\r\n        const { palette, imageData, w, h, colorDepth } = imageMetadata;\r\n\r\n        let newCode = [\r\n            '/** Generated with JSReformer',\r\n            '  * https://github.com/nununoisy/JSReformer',\r\n            '  *',\r\n            `  * Image: ${prefix}`,\r\n            `  * ${w}x${h}@${colorDepth}bpp (${2**colorDepth} colors)`,\r\n            `  */`,\r\n            '', '',\r\n            `static const uint8_t pixel_${prefix}${colorDepth}BPP_UNCOMP[] =${codeStyle === 'allman' ? '\\n': ' '}{`,\r\n            generateHexArray(imageData, 2, 8),\r\n            '};',\r\n            '',\r\n            `static const uint32_t palette_${prefix}${colorDepth}BPP_UNCOMP[] =${codeStyle === 'allman' ? '\\n': ' '}{`,\r\n            generateHexArray(palette, 6, 4),\r\n            '};',\r\n            '',\r\n            `const Graphics_Image ${prefix}${colorDepth}BPP_UNCOMP =${codeStyle === 'allman' ? '\\n': ' '}{`,\r\n            `    IMAGE_FMT_${colorDepth}BPP_UNCOMP,`,\r\n            `    ${w},`,\r\n            `    ${h},`,\r\n            `    ${2**colorDepth},`,\r\n            `    palette_${prefix}${colorDepth}BPP_UNCOMP,`,\r\n            `    pixel_${prefix}${colorDepth}BPP_UNCOMP`,\r\n            '};',\r\n            ''\r\n        ].join('\\n');\r\n\r\n        setCode(newCode);\r\n        setHighlightedCode(hljs.highlight(newCode, { language: 'c' }).value);\r\n    }, [imageMetadata, prefix, codeStyle]);\r\n\r\n    React.useEffect(() => {\r\n        if (copied) {\r\n            const copyTimeout = setTimeout(() => setCopied(false), 5000);\r\n            return () => clearTimeout(copyTimeout);\r\n        }\r\n    }, [copied]);\r\n\r\n    return (\r\n        <div className=\"codeGeneratorContainer\">\r\n            <label>\r\n                Prefix:\r\n                <input\r\n                    type=\"text\"\r\n                    value={prefix}\r\n                    onChange={(e) => setPrefix(e.target.value)}\r\n                />\r\n            </label>\r\n            <label>\r\n                Indentation style:\r\n                <select\r\n                    value={codeStyle}\r\n                    onChange={(e) => setCodeStyle(e.target.value)}\r\n                >\r\n                    <option value=\"knr\">K&R (brackets on same line)</option>\r\n                    <option value=\"allman\">Allman (brackets on next line)</option>\r\n                </select>\r\n            </label>\r\n            <button\r\n                onClick={() => {\r\n                    navigator.clipboard.writeText(code)\r\n                        .then(() => setCopied(true))\r\n                        .catch((e) => console.log(\"Copy failed\", e));\r\n                }}\r\n            >\r\n                {copied ? 'Copied!' : 'Copy to clipboard'}\r\n            </button>\r\n            <pre className=\"hljs\">\r\n                <code\r\n                    className=\"language-c\"\r\n                    dangerouslySetInnerHTML={{ __html : highlightedCode }}\r\n                />\r\n            </pre>\r\n        </div>\r\n    )\r\n}","import React from 'react';\n\nimport ImageUpload from \"./components/ImageUpload\";\nimport ImageReformer from \"./components/ImageReformer\";\nimport CodeGenerator from \"./components/CodeGenerator\";\n\nfunction App() {\n    const [imageURL, setImageURL] = React.useState(null);\n\n    const [imageMetadata, setImageMetadata] = React.useState(null);\n\n    return (\n        <div className=\"columns\">\n            <div>\n                <ImageUpload onChange={(url) => setImageURL(url)} />\n            </div>\n            <div>\n                <ImageReformer\n                    imageURL={imageURL}\n                    onChange={(d) => setImageMetadata(d)}\n                />\n            </div>\n            <div>\n                <CodeGenerator\n                    imageMetadata={imageMetadata}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}